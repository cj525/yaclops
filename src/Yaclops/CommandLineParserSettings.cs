using System;
using System.Collections.Generic;
using Yaclops.Commands;


namespace Yaclops
{
    /// <summary>
    /// Settings that alter the default behavior of the parser.
    /// </summary>
    /// <typeparam name="T">The type (usually an interface) of the commands generated by the parser.</typeparam>
    public class CommandLineParserSettings<T>
    {
        /// <summary>
        /// Constructor
        /// </summary>
        public CommandLineParserSettings()
        {
            HelpVerb = "help";
            HelpFlags = new[] { "-h", "--help", "-?" };
            NullCommand = () => default(T);
        }

        /// <summary>
        /// The verb that indicates help is desired. Defaults to "help".
        /// </summary>
        public string HelpVerb { get; set; }

        /// <summary>
        /// List of strings that indicate help is desired. Defaults to -h, -? and --help.
        /// </summary>
        public IEnumerable<string> HelpFlags { get; set; }

        /// <summary>
        /// A func that returns the command that is returned when help or another internal command is parsed.
        /// </summary>
        public Func<T> NullCommand { get; set; }

        /// <summary>
        /// Enable (hidden) internal Yaclops command used for debugging.
        /// </summary>
        public bool EnableYaclopsCommands { get; set; }
    }



    internal class DefaultSubCommandSettings : CommandLineParserSettings<ISubCommand>
    {
        public DefaultSubCommandSettings()
        {
            NullCommand = () => new NullSubCommand();
        }
    }
}
